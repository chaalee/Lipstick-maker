{"ast":null,"code":"var _jsxFileName = \"/Users/toeychalinee/Lipstick-maker/src/components/ProtectedRoute.js\",\n  _s = $RefreshSig$();\n// src/components/ProtectedRoute.js\nimport React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const location = useLocation();\n\n  // Simple password check - you might want to implement a more secure solution\n  const isAuthenticated = () => {\n    const password = localStorage.getItem('statsPassword');\n    return password === 'your-secure-password'; // Change this to your desired password\n  };\n  if (!isAuthenticated()) {\n    // Redirect to login if not authenticated\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","location","isAuthenticated","password","localStorage","getItem","to","state","from","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/toeychalinee/Lipstick-maker/src/components/ProtectedRoute.js"],"sourcesContent":["// src/components/ProtectedRoute.js\nimport React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\n\nconst ProtectedRoute = ({ children }) => {\n  const location = useLocation();\n  \n  // Simple password check - you might want to implement a more secure solution\n  const isAuthenticated = () => {\n    const password = localStorage.getItem('statsPassword');\n    return password === 'your-secure-password'; // Change this to your desired password\n  };\n\n  if (!isAuthenticated()) {\n    // Redirect to login if not authenticated\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  return children;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMO,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IACtD,OAAOF,QAAQ,KAAK,sBAAsB,CAAC,CAAC;EAC9C,CAAC;EAED,IAAI,CAACD,eAAe,CAAC,CAAC,EAAE;IACtB;IACA,oBAAOL,OAAA,CAACH,QAAQ;MAACY,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEP;MAAS,CAAE;MAACQ,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpE;EAEA,OAAOd,QAAQ;AACjB,CAAC;AAACC,EAAA,CAfIF,cAAc;EAAA,QACDH,WAAW;AAAA;AAAAmB,EAAA,GADxBhB,cAAc;AAiBpB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}