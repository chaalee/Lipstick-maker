{"ast":null,"code":"// src/services/websocket.js\nclass WebSocketService {\n  constructor() {\n    this.ws = null;\n    this.callbacks = new Map();\n  }\n  connect() {\n    this.ws = new WebSocket('ws://localhost:8000/ws');\n    this.ws.onmessage = event => {\n      const data = JSON.parse(event.data);\n      if (this.callbacks.has('status')) {\n        this.callbacks.get('status')(data.status);\n      }\n    };\n    return new Promise((resolve, reject) => {\n      this.ws.onopen = () => resolve();\n      this.ws.onerror = error => reject(error);\n    });\n  }\n  onStatus(callback) {\n    this.callbacks.set('status', callback);\n  }\n  moveConveyor() {\n    if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n      this.ws.send(JSON.stringify({\n        action: 'move_conveyor'\n      }));\n    }\n  }\n  returnHome() {\n    if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n      this.ws.send(JSON.stringify({\n        action: 'home'\n      }));\n    }\n  }\n  disconnect() {\n    if (this.ws) {\n      this.ws.close();\n    }\n  }\n}\nexport const wsService = new WebSocketService();","map":{"version":3,"names":["WebSocketService","constructor","ws","callbacks","Map","connect","WebSocket","onmessage","event","data","JSON","parse","has","get","status","Promise","resolve","reject","onopen","onerror","error","onStatus","callback","set","moveConveyor","readyState","OPEN","send","stringify","action","returnHome","disconnect","close","wsService"],"sources":["/Users/toeychalinee/Lipstick-maker/src/services/websocket.js"],"sourcesContent":["// src/services/websocket.js\nclass WebSocketService {\n  constructor() {\n      this.ws = null;\n      this.callbacks = new Map();\n  }\n\n  connect() {\n      this.ws = new WebSocket('ws://localhost:8000/ws');\n      \n      this.ws.onmessage = (event) => {\n          const data = JSON.parse(event.data);\n          if (this.callbacks.has('status')) {\n              this.callbacks.get('status')(data.status);\n          }\n      };\n\n      return new Promise((resolve, reject) => {\n          this.ws.onopen = () => resolve();\n          this.ws.onerror = (error) => reject(error);\n      });\n  }\n\n  onStatus(callback) {\n      this.callbacks.set('status', callback);\n  }\n\n  moveConveyor() {\n      if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n          this.ws.send(JSON.stringify({ action: 'move_conveyor' }));\n      }\n  }\n\n  returnHome() {\n      if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n          this.ws.send(JSON.stringify({ action: 'home' }));\n      }\n  }\n\n  disconnect() {\n      if (this.ws) {\n          this.ws.close();\n      }\n  }\n}\n\nexport const wsService = new WebSocketService();"],"mappings":"AAAA;AACA,MAAMA,gBAAgB,CAAC;EACrBC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,EAAE,GAAG,IAAI;IACd,IAAI,CAACC,SAAS,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC9B;EAEAC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACH,EAAE,GAAG,IAAII,SAAS,CAAC,wBAAwB,CAAC;IAEjD,IAAI,CAACJ,EAAE,CAACK,SAAS,GAAIC,KAAK,IAAK;MAC3B,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;MACnC,IAAI,IAAI,CAACN,SAAS,CAACS,GAAG,CAAC,QAAQ,CAAC,EAAE;QAC9B,IAAI,CAACT,SAAS,CAACU,GAAG,CAAC,QAAQ,CAAC,CAACJ,IAAI,CAACK,MAAM,CAAC;MAC7C;IACJ,CAAC;IAED,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACpC,IAAI,CAACf,EAAE,CAACgB,MAAM,GAAG,MAAMF,OAAO,CAAC,CAAC;MAChC,IAAI,CAACd,EAAE,CAACiB,OAAO,GAAIC,KAAK,IAAKH,MAAM,CAACG,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN;EAEAC,QAAQA,CAACC,QAAQ,EAAE;IACf,IAAI,CAACnB,SAAS,CAACoB,GAAG,CAAC,QAAQ,EAAED,QAAQ,CAAC;EAC1C;EAEAE,YAAYA,CAAA,EAAG;IACX,IAAI,IAAI,CAACtB,EAAE,IAAI,IAAI,CAACA,EAAE,CAACuB,UAAU,KAAKnB,SAAS,CAACoB,IAAI,EAAE;MAClD,IAAI,CAACxB,EAAE,CAACyB,IAAI,CAACjB,IAAI,CAACkB,SAAS,CAAC;QAAEC,MAAM,EAAE;MAAgB,CAAC,CAAC,CAAC;IAC7D;EACJ;EAEAC,UAAUA,CAAA,EAAG;IACT,IAAI,IAAI,CAAC5B,EAAE,IAAI,IAAI,CAACA,EAAE,CAACuB,UAAU,KAAKnB,SAAS,CAACoB,IAAI,EAAE;MAClD,IAAI,CAACxB,EAAE,CAACyB,IAAI,CAACjB,IAAI,CAACkB,SAAS,CAAC;QAAEC,MAAM,EAAE;MAAO,CAAC,CAAC,CAAC;IACpD;EACJ;EAEAE,UAAUA,CAAA,EAAG;IACT,IAAI,IAAI,CAAC7B,EAAE,EAAE;MACT,IAAI,CAACA,EAAE,CAAC8B,KAAK,CAAC,CAAC;IACnB;EACJ;AACF;AAEA,OAAO,MAAMC,SAAS,GAAG,IAAIjC,gBAAgB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}